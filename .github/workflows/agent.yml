name: Agent Runner

on:
  push:
    paths:
      - 'agent/tasks/queued/*.json'
  workflow_dispatch: {}

jobs:
  run-agent:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r agent/requirements.txt

      - name: Run agent
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python agent/bot.py

      - name: Show repo tree after agent
        run: ls -R

      - name: Print agent outputs
        run: |
          echo "=== last_branch_name ==="
          cat agent/last_branch_name.txt || true
          echo "=== last_pr_body ==="
          cat agent/last_pr_body.txt || true
          echo "=== output.json ==="
          test -f agent/output.json && cat agent/output.json || echo "(no output.json)"

      - name: Create branch and commit changes
        id: commit
        run: |
          SAFE_NAME=$(cat agent/last_branch_name.txt | tr '[:space:]' '-' | tr -cd '[:alnum:]-_.')
          BRANCH="agent-${SAFE_NAME}-${GITHUB_RUN_NUMBER}"

          git config user.name "agent-bot"
          git config user.email "bot@example.com"

          # Branch off from current state (keeps agent changes)
          git checkout -b "$BRANCH"

          git add -A
          if git diff --cached --quiet; then
            echo "no changes"
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          git commit -m "Agent: $(cat agent/last_branch_name.txt)"
          git push --set-upstream origin "$BRANCH"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "changed=true" >> $GITHUB_OUTPUT

      - name: Open Pull Request
        if: steps.commit.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Agent: $(cat agent/last_branch_name.txt)"
          body: |
            $(cat agent/last_pr_body.txt)
          branch: ${{ steps.commit.outputs.branch }}
          base: main
