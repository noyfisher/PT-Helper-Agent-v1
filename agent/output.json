{
  "task": {
    "type": "ios_feature",
    "mode": "pr",
    "title": "Create Exercise Tracking Module",
    "description": "Build core exercise tracking functionality for PT-Helper app with SwiftUI interface and data models",
    "requirements": [
      "Exercise list view with search and filter capabilities",
      "Individual exercise detail view with instructions",
      "Progress tracking with sets, reps, and completion status",
      "Timer functionality for timed exercises",
      "Data persistence for user progress"
    ],
    "deliverables": [
      {
        "path": "ios/PT-Helper/Views/ExerciseListView.swift",
        "type": "new",
        "description": "Main exercise list with search and filtering"
      },
      {
        "path": "ios/PT-Helper/Views/ExerciseDetailView.swift",
        "type": "new",
        "description": "Detailed exercise view with instructions and media"
      },
      {
        "path": "ios/PT-Helper/ViewModels/ExerciseViewModel.swift",
        "type": "new",
        "description": "ViewModel managing exercise data and user interactions"
      },
      {
        "path": "ios/PT-Helper/Models/Exercise.swift",
        "type": "new",
        "description": "Core exercise data model"
      },
      {
        "path": "ios/PT-Helper/Models/ExerciseSession.swift",
        "type": "new",
        "description": "User exercise session and progress tracking"
      },
      {
        "path": "ios/PT-Helper/Services/ExerciseService.swift",
        "type": "new",
        "description": "Service layer for exercise data management"
      }
    ],
    "properties": {
      "exercise_model": {
        "id": "UUID",
        "name": "String",
        "description": "String",
        "instructions": "[String]",
        "duration": "Int?",
        "repetitions": "Int?",
        "sets": "Int?",
        "difficulty": "ExerciseDifficulty",
        "category": "ExerciseCategory",
        "imageURL": "String?",
        "videoURL": "String?"
      },
      "exercise_session": {
        "id": "UUID",
        "exerciseId": "UUID",
        "startTime": "Date",
        "endTime": "Date?",
        "completedSets": "Int",
        "completedReps": "Int",
        "notes": "String?",
        "painLevel": "Int?",
        "isCompleted": "Bool"
      }
    },
    "constraints": [
      "Follow iOS accessibility guidelines for PT users",
      "Large touch targets for users with limited mobility",
      "Clear visual hierarchy and easy-to-read text",
      "Support for VoiceOver and assistive technologies",
      "Offline-first design for exercise tracking"
    ],
    "context": {
      "app_domain": "physical_therapy",
      "target_users": "PT patients and therapists",
      "target_ios_version": "15.0+",
      "architecture_pattern": "MVVM",
      "ui_framework": "SwiftUI",
      "safety_considerations": [
        "Include pain level tracking",
        "Warning messages for overexertion",
        "Contact therapist functionality"
      ]
    }
  },
  "ios_context": {
    "has_ios_project": true,
    "bundle_identifier": "com.yourorg.PT-Helper",
    "target_name": "PT-Helper",
    "swift_files": [
      "ios/PT-Helper/PT-HelperTests/PT_HelperTests.swift",
      "ios/PT-Helper/PT-HelperUITests/PT_HelperUITestsLaunchTests.swift",
      "ios/PT-Helper/PT-HelperUITests/PT_HelperUITests.swift",
      "ios/PT-Helper/PT-Helper/LoginView.swift",
      "ios/PT-Helper/PT-Helper/RootView.swift",
      "ios/PT-Helper/PT-Helper/PT_HelperApp.swift",
      "ios/PT-Helper/PT-Helper/ContentView.swift"
    ],
    "storyboards": [],
    "has_swiftui": true,
    "dependencies": {
      "cocoapods": [],
      "spm": []
    },
    "project_path": "ios/PT-Helper/PT-Helper.xcodeproj",
    "ios_structure": {
      "LAYOUT.md": "file",
      "PT-Helper/": {
        "GoogleService-Info.plist": "file",
        "PT-Helper/": {
          "Assets.xcassets/": {
            "AccentColor.colorset/": {},
            "AppIcon.appiconset/": {},
            "Contents.json": "file"
          },
          "ContentView.swift": "file",
          "LoginView.swift": "file",
          "PT-Helper.entitlements": "file",
          "PT_HelperApp.swift": "file",
          "Preview Content/": {
            "Preview Assets.xcassets/": {}
          },
          "RootView.swift": "file"
        },
        "PT-Helper.xcodeproj/": {
          "project.pbxproj": "file",
          "project.xcworkspace/": {
            "contents.xcworkspacedata": "file",
            "xcshareddata/": {},
            "xcuserdata/": {}
          },
          "xcuserdata/": {
            "noyfisher.xcuserdatad/": {}
          }
        },
        "PT-HelperTests/": {
          "PT_HelperTests.swift": "file"
        },
        "PT-HelperUITests/": {
          "PT_HelperUITests.swift": "file",
          "PT_HelperUITestsLaunchTests.swift": "file"
        }
      }
    }
  },
  "model_result": {
    "title": "create-exercise-tracking-module",
    "summary": "Implements core exercise tracking functionality including views, models, and services for the PT-Helper app.",
    "changes": [
      {
        "path": "ios/PT-Helper/Models/Exercise.swift",
        "action": "create",
        "content": "import Foundation\n\nenum ExerciseDifficulty: String, Codable {\n    case easy, medium, hard\n}\n\nenum ExerciseCategory: String, Codable {\n    case strength, cardio, flexibility\n}\n\nstruct Exercise: Identifiable, Codable {\n    var id: UUID\n    var name: String\n    var description: String\n    var instructions: [String]\n    var duration: Int?\n    var repetitions: Int?\n    var sets: Int?\n    var difficulty: ExerciseDifficulty\n    var category: ExerciseCategory\n    var imageURL: String?\n    var videoURL: String?\n}\n"
      },
      {
        "path": "ios/PT-Helper/Models/ExerciseSession.swift",
        "action": "create",
        "content": "import Foundation\n\nstruct ExerciseSession: Identifiable, Codable {\n    var id: UUID\n    var exerciseId: UUID\n    var startTime: Date\n    var endTime: Date?\n    var completedSets: Int\n    var completedReps: Int\n    var notes: String?\n    var painLevel: Int?\n    var isCompleted: Bool\n}\n"
      },
      {
        "path": "ios/PT-Helper/Services/ExerciseService.swift",
        "action": "create",
        "content": "import Foundation\n\nclass ExerciseService {\n    func fetchExercises() -> [Exercise] {\n        // Fetch exercises from a data source\n        return []\n    }\n    \n    func saveSession(session: ExerciseSession) {\n        // Save exercise session data\n    }\n}\n"
      },
      {
        "path": "ios/PT-Helper/ViewModels/ExerciseViewModel.swift",
        "action": "create",
        "content": "import Foundation\nimport Combine\n\nclass ExerciseViewModel: ObservableObject {\n    @Published var exercises: [Exercise] = []\n    @Published var selectedExercise: Exercise?\n    private var exerciseService = ExerciseService()\n    \n    func loadExercises() {\n        exercises = exerciseService.fetchExercises()\n    }\n}\n"
      },
      {
        "path": "ios/PT-Helper/Views/ExerciseListView.swift",
        "action": "create",
        "content": "import SwiftUI\n\nstruct ExerciseListView: View {\n    @StateObject private var viewModel = ExerciseViewModel()\n    @State private var searchText = \"\"\n    \n    var body: some View {\n        NavigationView {\n            List {\n                ForEach(viewModel.exercises.filter { searchText.isEmpty ? true : $0.name.contains(searchText) }) { exercise in\n                    NavigationLink(destination: ExerciseDetailView(exercise: exercise)) {\n                        Text(exercise.name)\n                    }\n                }\n            }\n            .searchable(text: $searchText)\n            .navigationTitle(\"Exercises\")\n            .onAppear { viewModel.loadExercises() }\n        }\n    }\n}\n\nstruct ExerciseListView_Previews: PreviewProvider {\n    static var previews: some View {\n        ExerciseListView()\n    }\n}\n"
      },
      {
        "path": "ios/PT-Helper/Views/ExerciseDetailView.swift",
        "action": "create",
        "content": "import SwiftUI\n\nstruct ExerciseDetailView: View {\n    var exercise: Exercise\n    \n    var body: some View {\n        ScrollView {\n            VStack(alignment: .leading) {\n                Text(exercise.name)\n                    .font(.largeTitle)\n                    .padding()\n                Text(exercise.description)\n                    .padding()\n                ForEach(exercise.instructions, id: \\.\u007fself) { instruction in\n                    Text(instruction)\n                        .padding(.horizontal)\n                }\n            }\n        }\n        .navigationTitle(exercise.name)\n    }\n}\n\nstruct ExerciseDetailView_Previews: PreviewProvider {\n    static var previews: some View {\n        let exercise = Exercise(id: UUID(), name: \"Sample Exercise\", description: \"This is a sample exercise.\", instructions: [\"Step 1\", \"Step 2\"], duration: nil, repetitions: nil, sets: nil, difficulty: .medium, category: .strength, imageURL: nil, videoURL: nil)\n        ExerciseDetailView(exercise: exercise)\n    }\n}\n"
      }
    ]
  }
}